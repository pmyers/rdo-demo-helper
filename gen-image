#!/bin/bash

srcdir=$(readlink -m $(dirname $0))
source $srcdir/common

SYSPREP_OPTS=$(virt-sysprep --list-operations | grep \* | awk '{print $1}' | grep -v -e ssh-userdir -e script | xargs | tr ' ' ',')

print_help() {
    echo "$0 [os type] [num hosts]"
    echo
    echo "This script generates a series of guest images based on a single"
    echo "base image file that are used by other scripts like rdo-demo-prep"
    echo "and rdo-demo"
    echo
    echo "Valid os types are: $IMG_TYPES"
    exit 0
}

TYPE=$1
num_hosts=$2

checktype $TYPE
test -z $VMS_DIR && error "VMS_DIR is not set"
test -f $VMS_DIR/zzz-$TYPE.img \
    || error "$VMS_DIR/zzz-$TYPE.img not present"

sub=$(getsub $TYPE)
privsub=$(( $sub - 50 ))
[ -z "$num_hosts" ] && num_hosts=1

refresh-storage-pools

$VIRSH shutdown zzz-$TYPE > /dev/null 2>&1
virsh_shutdown_wait zzz-$TYPE

for i in `seq 1 $num_hosts`; do
    image="${TYPE}$i"
    ip="$(( $i + 100))"
    addhost $image 192.168.$sub.$ip

    mac=$(grep "@NAME@$i" $srcdir/net-mgmt \
        | sed 's/.*mac="\(.*\)" name=.*/\1/' | sed "s/@MAC@/$privsub/")
    [ -n "$mac" ] && macopt=",mac=$mac"

    $VIRSH destroy $image 2> /dev/null
    $VIRSH undefine $image 2> /dev/null
    test -f $VMS_DIR/$image.img && sudo rm -f $VMS_DIR/$image.img

    sudo qemu-img create -o backing_file=$VMS_DIR/zzz-$TYPE.img \
        -f qcow2 $VMS_DIR/$image.img || error

    sudo virt-sysprep --no-selinux-relabel --enable $SYSPREP_OPTS \
	    --hostname $image -a $VMS_DIR/$image.img || error

    sudo virt-install -n $image -r 4096 --vcpus 2 --noautoconsole \
        -w network=$TYPE-mgmt$macopt -w network=$TYPE-priv \
        --os-variant=$(osvariant $TYPE) \
        --noreboot --import --disk path=$VMS_DIR/$image.img || error

    ssh-clean $image
done

