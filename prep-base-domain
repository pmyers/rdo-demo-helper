#!/bin/bash

srcdir=$(readlink -m $(dirname $0))
source $srcdir/common

print_help() {
    echo "$0 [os type]"
    echo
    echo "This script prepares a base qcow2 image of the given type for use"
    echo "in deploying multiple guests in a virtual datacenter for demos."
    echo
    echo "Valid os types are: $IMG_TYPES"
    exit 0    
}

[ "-h" == "$1" ] && print_help

TYPE=$1

checktype $TYPE
test -z $VMS_DIR && error "VMS_DIR is not set"

vm=zzz-$TYPE

sub=$(getsub $TYPE)
privsub=$(( $sub - 50 ))
ipaddr=192.168.$sub.100

addhost $vm $ipaddr

mac=$(grep "zzz-@NAME@" $srcdir/net-mgmt \
    | sed 's/.*mac="\(.*\)" name=.*/\1/' | sed "s/@MAC@/$privsub/")
[ -n "$mac" ] && macopt=",mac=$mac"

refresh-storage-pools

{
    $VIRSH destroy $vm
    $VIRSH undefine $vm
    $VIRSH net-destroy $TYPE-mgmt && $VIRSH net-undefine $TYPE-mgmt
    $VIRSH net-destroy $TYPE-priv && $VIRSH net-undefine $TYPE-priv

    foreach_host $TYPE 10 "$VIRSH destroy"
    foreach_host $TYPE 10 "$VIRSH undefine"
} > /dev/null 2>&1

tmp=$(mktemp)
sed -e "s/@NAME@/$TYPE/g" -e "s/@SUB@/$sub/g" -e "s/@MAC@/$privsub/g" \
    $srcdir/net-mgmt > $tmp
$VIRSH net-define $tmp

tmp=$(mktemp)
sed -e "s/@NAME@/$TYPE/g" -e "s/@SUB@/$privsub/g" \
    $srcdir/net-priv > $tmp
$VIRSH net-define $tmp

$VIRSH net-start $TYPE-mgmt
$VIRSH net-autostart $TYPE-mgmt
$VIRSH net-start $TYPE-priv
$VIRSH net-autostart $TYPE-priv

sudo chown $USER $VMS_DIR/$vm.img 2> /dev/null
IMPORT_IMG=$VMS_DIR/bak/$TYPE-guest.img

if [ "$TYPE" == "rhel6" ]; then
    test -f $IMPORT_IMG || error "$IMPORT_IMG not present"
    rsync -LaP $IMPORT_IMG $VMS_DIR/$vm.img || error
elif [ "$TYPE" == "rhel7" ]; then
    test -f $IMPORT_IMG || error "$IMPORT_IMG not present"
    rsync -LaP $IMPORT_IMG $VMS_DIR/$vm.img || error
elif [ "$TYPE" == "centos6" ]; then
    sudo virt-builder --hostname $vm --format qcow2 --size 15G --update \
        --root-password password:password --selinux-relabel \
        -o $VMS_DIR/$vm.img centos-6 || error
elif [ "$TYPE" == "fedora20" ]; then
    # NOTE: It appears that the image used by virt-builder for F20
    #       is totally broken and not the same one that is actually shipped
    #       by the Fedora team
    #    sudo virt-builder --hostname $vm --format qcow2 --size 15G --update \
    #        --root-password password:password --selinux-relabel \
    #        -o $VMS_DIR/$vm.img fedora-20 || error
    pushd $VMS_DIR/bak
    $srcdir/os-dl-fedora
    popd

    test -f $IMPORT_IMG || error "$IMPORT_IMG not present"
    rsync -LaP $IMPORT_IMG $VMS_DIR/$vm.img || error

    # NOTE: The Fedora cloud image is 2GB rootfs.  virt-builder would resize
    # this for us but since virt-builder has a broken image, we do it manually
    rm -fv $vm-tmp.img
    qemu-img create -f qcow2 $VMS_DIR/$vm-tmp.img 15G
    sudo virt-resize --expand /dev/sda1 $VMS_DIR/$vm.img $VMS_DIR/$vm-tmp.img
    mv -fv $VMS_DIR/$vm-tmp.img $VMS_DIR/$vm.img
fi

sudo virt-sysprep --selinux-relabel --operations defaults,-ssh-userdir \
    --root-password password:password \
    --script $srcdir/sysprep-$TYPE \
    --firstboot $srcdir/firstboot-$TYPE \
    -a $VMS_DIR/$vm.img || error

sudo virt-install -n $vm -r 2048 --vcpus 2 --noautoconsole \
    -w network=$TYPE-mgmt$macopt -w network=$TYPE-priv \
    --os-variant=$(osvariant $TYPE) \
    --import --disk path=$VMS_DIR/$vm.img || error

ssh-clean $vm
sshwait admin@$vm

$ssh admin@$vm sudo yum install yum deltarpm -y
$ssh admin@$vm sudo yum update -y

if [ $(echo $TYPE | grep -e rhel -e centos) ]; then
    $ssh admin@$vm sudo yum install --enablerepo=epel git-all -y
else
    $ssh admin@$vm sudo yum install git-all -y
fi

$ssh admin@$vm sudo yum install nfs-utils emacs-color-theme fpaste \
    yum-config-manager yum-utils yum-plugin-priorities -y

$ssh admin@$vm git clone https://github.com/pmyers/rdo-demo-helper.git

$ssh admin@$vm sudo yum install $(cat $srcdir/devstack-deps | xargs) -y \
    --skip-broken

$ssh admin@$vm "echo 'export PATH=$PATH:~/rdo-demo-helper' >> .bashrc"

$VIRSH shutdown $vm > /dev/null 2>&1
virsh_shutdown_wait $vm

sudo TMPDIR=$VMS_DIR virt-sparsify --compress $VMS_DIR/$vm.img \
    $VMS_DIR/$vm-sparse.img || error
sudo mv -v $VMS_DIR/$vm-sparse.img $VMS_DIR/$vm.img
